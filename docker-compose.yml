version: '3'
services:
#  mongo:
#    image: mongo:8.0.0-rc17-noble
#    command: mongod --bind_ip_all --replSet rs0 --keyFile /data/replica.key
#    entrypoint:
#      - bash
#      - -c
#      - |
#        openssl rand -base64 756 > /data/replica.key
#        chmod 400 /data/replica.key
#        chown 999:999 /data/replica.key
#        exec docker-entrypoint.sh $$@
#    container_name: mongo
#    ports:
#      - "27017:27017"
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#    healthcheck:
#      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
#      interval: 5s
#      timeout: 5s
#      retries: 3
#      start_period: 5s
#    volumes:
#      - ./.storage/mongo/replica.key.devel:/data/replica.key.devel
#      - ./.storage/mongo/data:/data/db
#      - ./.storage/mongo/log:/var/log/mongodb
#    env_file:
#      - .env

#  mongo-express:
#    image: mongo-express
#    ports:
#      - "8081:8081"
#    networks:
#      - mongodb_network
#    env_file:
#      - .env
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo
#      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo
#      ME_CONFIG_MONGODB_URL: mongodb://mongo:mongo@mongo:27017/
#      ME_CONFIG_BASICAUTH: false

  postgres:
    image: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./.storage/postgres:/var/lib/postgresql/data
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4_container
    ports:
      - "8888:80"
    volumes:
      - ./.storage/pgadmin:/var/lib/pgadmin
    env_file:
      - .env

#networks:
#  mongodb_network:
#    driver: bridge
#    name: mongo-network